{
  "v1": {
    "config": null,
    "helmValues": "## Details about the image to be pulled.\nimage:\n  name: registry.opensource.zalan.do/teapot/external-dns\n  tag: v0.5.9\n  pullSecrets: []\n  pullPolicy: IfNotPresent\n\n## This controls which types of resource external-dns should 'watch' for new\n## DNS entries.\nsources:\n  - service\n  - ingress\n\n# Allow external-dns to publish DNS records for ClusterIP services (optional)\npublishInternalServices: false\n\n## The DNS provider where the DNS records will be created (options: aws, google, inmemory, azure )\nprovider: aws\n\n# AWS Access keys to inject as environment variables\naws:\n  secretKey: \"\"\n  accessKey: \"\"\n  # pre external-dns 0.5.9 home dir should be `/root/.aws`\n  credentialsPath: \"/.aws\"\n  roleArn: \"\"\n  region: \"us-east-1\"\n  # Filter for zones of this type (optional, options: public, private)\n  zoneType: \"\"\n\nazure:\n# If you don't specify a secret to load azure.json from, you will get the host's /etc/kubernetes/azure.json\n  secretName: \"\"\n\n# Cloudflare keys to inject as environment variables\ncloudflare:\n  apiKey: \"\"\n  email: \"\"\n  proxied: true\n\n# Configuration for OpenStack Designate provider\ndesignate:\n  # A custom CA (optional)\n  customCA:\n    # Turn custom CA on or off\n    enabled: false\n    # The content of the custom CA file\n    content: \"\"\n    # Location to mount custom CA\n    directory: \"/config/designate\"\n    # Filename of the custom CA\n    filename: \"designate-ca.pem\"\n\n# DigitalOcean API token to inject as environment variable\ndigitalocean:\n  apiToken: \"\"\n\n# When using the Google provider, specify the Google project (required when provider=google)\ngoogle:\n  project: \"\"\n  serviceAccountSecret: \"\"\n  serviceAccountKey: \"\"\n\n# Infoblox keys to inject\ninfoblox:\n  # Required keys:\n  wapiUsername: \"\"\n  wapiPassword: \"\"\n  gridHost: \"\"\n  # Optional keys:\n  domainFilter: \"\"\n  noSslVerify: false\n  wapiPort: \"\"\n  wapiVersion: \"\"\n  wapiConnectionPoolSize: \"\"\n  wapiHttpTimeout: \"\"\n\n## Limit possible target zones by domain suffixes (optional)\ndomainFilters: []\n## Limit possible target zones by zone id (optional)\nzoneIdFilters: []\n# Filter sources managed by external-dns via annotation using label selector semantics (default: all sources)\nannotationFilter: \"\"\n## Adjust the interval for DNS updates\ninterval: \"1m\"\n\n# Registry to use for ownership (txt or noop)\nregistry: \"txt\"\n\n# When using the TXT registry, a name that identifies this instance of ExternalDNS\ntxtOwnerId: \"\"\n\n# When enabled, prints DNS record changes rather than actually performing them\ndryRun: false\n\n## Node labels for pod assignment\n## Ref: https://kubernetes.io/docs/user-guide/node-selection/\n##\nnodeSelector: {}\n\n## List of node taints to tolerate (requires Kubernetes \u003e= 1.6)\ntolerations: []\n\n## Modify how DNS records are sychronized between sources and providers (options: sync, upsert-only )\npolicy: upsert-only\n\n## Annotations to be added to pods\n##\npodAnnotations: {}\n\npodLabels: {}\n\n# Verbosity of the logs (options: panic, debug, info, warn, error, fatal)\nlogLevel: info\n\nextraArgs: {}\n\n# Extra environment variables which will be saved in a release-specific secret\n# or retrieved via valueFrom.\n# extraEnv:\n# - name: SECRET_TO_SAVE\n#   value: secret_value\n# - name: AWS_ACCESS_KEY_ID\n#   valueFrom:\n#     secretKeyRef:\n#       name: existing-secret\n#       key: access-key-id\nextraEnv: []\n\n## CPU and Memory limit and request for external-dns\nresources: {}\n#  limits:\n#    memory: 50Mi\n#  requests:\n#    memory: 50Mi\n#    cpu: 10m\n\nrbac:\n  ## If true, create \u0026 use RBAC resources\n  ##\n  create: false\n  # Beginning with Kubernetes 1.8, the api is stable and v1 can be used.\n  apiVersion: v1beta1\n\n  ## Ignored if rbac.create is true\n  ##\n  serviceAccountName: default\n\nsecurityContext: {}\n  # readOnlyRootFilesystem: true\n  # runAsNonRoot: true\n  # runAsUser: 65534 # 65534 is nobody - revise aws.credentialsPath when changing uid\n  # capabilities:\n  #   drop: [\"ALL\"]\n\nservice:\n  annotations: {}\n  clusterIP: \"\"\n\n  ## List of IP addresses at which the service is available\n  ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n  ##\n  externalIPs: []\n\n  loadBalancerIP: \"\"\n  loadBalancerSourceRanges: []\n  servicePort: 7979\n  type: ClusterIP\n\npriorityClassName: \"\"\n",
    "releaseName": "external-dns",
    "helmValuesDefaults": "## Details about the image to be pulled.\nimage:\n  name: registry.opensource.zalan.do/teapot/external-dns\n  tag: v0.5.9\n  pullSecrets: []\n  pullPolicy: IfNotPresent\n\n## This controls which types of resource external-dns should 'watch' for new\n## DNS entries.\nsources:\n  - service\n  - ingress\n\n# Allow external-dns to publish DNS records for ClusterIP services (optional)\npublishInternalServices: false\n\n## The DNS provider where the DNS records will be created (options: aws, google, inmemory, azure )\nprovider: aws\n\n# AWS Access keys to inject as environment variables\naws:\n  secretKey: \"\"\n  accessKey: \"\"\n  # pre external-dns 0.5.9 home dir should be `/root/.aws`\n  credentialsPath: \"/.aws\"\n  roleArn: \"\"\n  region: \"us-east-1\"\n  # Filter for zones of this type (optional, options: public, private)\n  zoneType: \"\"\n\nazure:\n# If you don't specify a secret to load azure.json from, you will get the host's /etc/kubernetes/azure.json\n  secretName: \"\"\n\n# Cloudflare keys to inject as environment variables\ncloudflare:\n  apiKey: \"\"\n  email: \"\"\n  proxied: true\n\n# Configuration for OpenStack Designate provider\ndesignate:\n  # A custom CA (optional)\n  customCA:\n    # Turn custom CA on or off\n    enabled: false\n    # The content of the custom CA file\n    content: \"\"\n    # Location to mount custom CA\n    directory: \"/config/designate\"\n    # Filename of the custom CA\n    filename: \"designate-ca.pem\"\n\n# DigitalOcean API token to inject as environment variable\ndigitalocean:\n  apiToken: \"\"\n\n# When using the Google provider, specify the Google project (required when provider=google)\ngoogle:\n  project: \"\"\n  serviceAccountSecret: \"\"\n  serviceAccountKey: \"\"\n\n# Infoblox keys to inject\ninfoblox:\n  # Required keys:\n  wapiUsername: \"\"\n  wapiPassword: \"\"\n  gridHost: \"\"\n  # Optional keys:\n  domainFilter: \"\"\n  noSslVerify: false\n  wapiPort: \"\"\n  wapiVersion: \"\"\n  wapiConnectionPoolSize: \"\"\n  wapiHttpTimeout: \"\"\n\n## Limit possible target zones by domain suffixes (optional)\ndomainFilters: []\n## Limit possible target zones by zone id (optional)\nzoneIdFilters: []\n# Filter sources managed by external-dns via annotation using label selector semantics (default: all sources)\nannotationFilter: \"\"\n## Adjust the interval for DNS updates\ninterval: \"1m\"\n\n# Registry to use for ownership (txt or noop)\nregistry: \"txt\"\n\n# When using the TXT registry, a name that identifies this instance of ExternalDNS\ntxtOwnerId: \"\"\n\n# When enabled, prints DNS record changes rather than actually performing them\ndryRun: false\n\n## Node labels for pod assignment\n## Ref: https://kubernetes.io/docs/user-guide/node-selection/\n##\nnodeSelector: {}\n\n## List of node taints to tolerate (requires Kubernetes \u003e= 1.6)\ntolerations: []\n\n## Modify how DNS records are sychronized between sources and providers (options: sync, upsert-only )\npolicy: upsert-only\n\n## Annotations to be added to pods\n##\npodAnnotations: {}\n\npodLabels: {}\n\n# Verbosity of the logs (options: panic, debug, info, warn, error, fatal)\nlogLevel: info\n\nextraArgs: {}\n\n# Extra environment variables which will be saved in a release-specific secret\n# or retrieved via valueFrom.\n# extraEnv:\n# - name: SECRET_TO_SAVE\n#   value: secret_value\n# - name: AWS_ACCESS_KEY_ID\n#   valueFrom:\n#     secretKeyRef:\n#       name: existing-secret\n#       key: access-key-id\nextraEnv: []\n\n## CPU and Memory limit and request for external-dns\nresources: {}\n#  limits:\n#    memory: 50Mi\n#  requests:\n#    memory: 50Mi\n#    cpu: 10m\n\nrbac:\n  ## If true, create \u0026 use RBAC resources\n  ##\n  create: false\n  # Beginning with Kubernetes 1.8, the api is stable and v1 can be used.\n  apiVersion: v1beta1\n\n  ## Ignored if rbac.create is true\n  ##\n  serviceAccountName: default\n\nsecurityContext: {}\n  # readOnlyRootFilesystem: true\n  # runAsNonRoot: true\n  # runAsUser: 65534 # 65534 is nobody - revise aws.credentialsPath when changing uid\n  # capabilities:\n  #   drop: [\"ALL\"]\n\nservice:\n  annotations: {}\n  clusterIP: \"\"\n\n  ## List of IP addresses at which the service is available\n  ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n  ##\n  externalIPs: []\n\n  loadBalancerIP: \"\"\n  loadBalancerSourceRanges: []\n  servicePort: 7979\n  type: ClusterIP\n\npriorityClassName: \"\"\n",
    "upstream": "github.com/helm/charts/stable/external-dns",
    "metadata": {
      "applicationType": "helm",
      "name": "external-dns",
      "releaseNotes": "[stable/external-dns] Support DigitalOcean (Fixes #10923). (#11257)\n\n* [stable/external-dns] Support DigitalOcean (Fixes #10923).\n\nSigned-off-by: Andrew Starr-Bochicchio \u003ca.starr.b@gmail.com\u003e\n\n* [stable/external-dns] Bump chart version.\n\nSigned-off-by: Andrew Starr-Bochicchio \u003ca.starr.b@gmail.com\u003e\n\n* [stable/external-dns] Bump chart version again.\n\nSigned-off-by: Andrew Starr-Bochicchio \u003ca.starr.b@gmail.com\u003e",
      "version": "1.6.2"
    },
    "contentSHA": "d2128b4c079f2bfff1661b4cc546469c32d7e9b383eadaa06e360438330e7b12",
    "lifecycle": {
      "stepsCompleted": {
        "intro": true,
        "kustomize": true,
        "kustomize-intro": true,
        "outro": true,
        "render": true,
        "values": true
      }
    }
  }
}